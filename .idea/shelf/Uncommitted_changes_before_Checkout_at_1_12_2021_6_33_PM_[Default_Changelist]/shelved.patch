Index: src/main/resources/log4j2.xml
===================================================================
diff --git a/src/main/resources/log4j2.xml b/src/main/resources/log4j2.xml
deleted file mode 100644
--- a/src/main/resources/log4j2.xml	(revision f8ba98c362f8e0697b679d5f3bf1fcdc12641280)
+++ /dev/null	(revision f8ba98c362f8e0697b679d5f3bf1fcdc12641280)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Configuration status="WARN">
-    <Appenders>
-        <Console name="Console" target="SYSTEM_OUT">
-            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} %-5p [%t] %C{1} %L %msg%n"/>
-        </Console>
-        <File name="File" fileName="target/log-output/log_file.log">
-            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} %-5p [%t] %C{1} %L %msg%n"/>
-        </File>
-    </Appenders>
-    <Loggers>
-        <Logger name="com.module4.loggingtask.Main" level="trace">
-            <AppenderRef ref="File"/>
-        </Logger>
-        <Logger name="com.module4.loggingtask.Logic" level="trace">
-            <AppenderRef ref="File"/>
-        </Logger>
-        <Root level="error">
-            <AppenderRef ref="Console"/>
-        </Root>
-    </Loggers>
-</Configuration>
\ No newline at end of file
Index: src/main/java/com/module3/figure/RandomFiguresArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.module3.figure;\r\n\r\nimport java.util.Random;\r\n\r\npublic class RandomFiguresArray {\r\n    private int figureSize; //максимальный линейный размер фигуры\r\n    private int incrementedSift; // эта переменная хранит расстояние, которое увеличивается на значение сдвига с каждой новой фигурой\r\n\r\n    public Figure[] generateRandomFiguresArray(int linearSize) {\r\n        figureSize = linearSize;\r\n        int shift = figureSize + 1;\r\n        incrementedSift = 0; // это сдвиг по оси x, благодаря ему фигуры не будут пересекаться\r\n\r\n        Figure[] figures = new Figure[10];\r\n        for (int i = 0; i < figures.length; i++) //наполняем массив случайными фигурами\r\n        {\r\n            Random random = new Random();\r\n            int type = random.nextInt(2 + 1);\r\n            if (type == 0) {\r\n                figures[i] = randCircle();\r\n                figures[i].setName(NameGenerator.giveName() + \" Circle \" + (i + 1));\r\n            } else if (type == 1) {\r\n                figures[i] = randTriangle();\r\n                figures[i].setName(NameGenerator.giveName() + \" Triangle \" + (i + 1));\r\n            } else {\r\n                figures[i] = randSquare();\r\n                figures[i].setName(NameGenerator.giveName() + \" Square \" + (i + 1));\r\n            }\r\n            incrementedSift = incrementedSift + shift; //сдвиг места генерации после появления каждой новой фигуры во избежание пересечений\r\n        }\r\n        return figures;\r\n    }\r\n\r\n    private Point randPoint() {\r\n        Random random = new Random();\r\n        float x = (float) random.nextInt(figureSize + 1) + random.nextFloat() + incrementedSift;\r\n        // второй вызов рандома для получения дробной части\r\n        // прибавлять incrementedSift нужно для того, чтобы каждая новая фигура отодвигалась от места генерации предыдущей на расстояние figureSize + 1, благодаря чему пересечение фигур исключено\r\n        float y = (float) random.nextInt(figureSize + 1) + random.nextFloat();\r\n        return new Point(x, y);\r\n    }\r\n\r\n    private Circle randCircle() {\r\n        Point a = randPoint();\r\n        Point b = randPoint();\r\n        return new Circle(a.getX(), a.getY(), b.getX(), b.getY());\r\n    }\r\n\r\n    private Triangle randTriangle() {\r\n        Point a = randPoint();\r\n        Point b = randPoint();\r\n        Point c = randPoint();\r\n        return new Triangle(a.getX(), a.getY(), b.getX(), b.getY(), c.getX(), c.getY());\r\n    }\r\n\r\n    private Square randSquare() {\r\n        Point a = randPoint();\r\n        Point b = randPoint();\r\n        return new Square(a.getX(), a.getY(), b.getX(), b.getY());\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/module3/figure/RandomFiguresArray.java b/src/main/java/com/module3/figure/RandomFiguresArray.java
--- a/src/main/java/com/module3/figure/RandomFiguresArray.java	(revision f8ba98c362f8e0697b679d5f3bf1fcdc12641280)
+++ b/src/main/java/com/module3/figure/RandomFiguresArray.java	(date 1610466132586)
@@ -1,5 +1,7 @@
 package com.module3.figure;
 
+import com.universal.RandomGenerator;
+
 import java.util.Random;
 
 public class RandomFiguresArray {
@@ -18,13 +20,13 @@
             int type = random.nextInt(2 + 1);
             if (type == 0) {
                 figures[i] = randCircle();
-                figures[i].setName(NameGenerator.giveName() + " Circle " + (i + 1));
+                figures[i].setName(RandomGenerator.giveName() + " Circle " + (i + 1));
             } else if (type == 1) {
                 figures[i] = randTriangle();
-                figures[i].setName(NameGenerator.giveName() + " Triangle " + (i + 1));
+                figures[i].setName(RandomGenerator.giveName() + " Triangle " + (i + 1));
             } else {
                 figures[i] = randSquare();
-                figures[i].setName(NameGenerator.giveName() + " Square " + (i + 1));
+                figures[i].setName(RandomGenerator.giveName() + " Square " + (i + 1));
             }
             incrementedSift = incrementedSift + shift; //сдвиг места генерации после появления каждой новой фигуры во избежание пересечений
         }
